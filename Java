 
SLIP 1(A) 
Write a ‘java’ program to display characters from ‘A’ to ‘Z’. 
class slip1A 
{ 
    public static void main(String a[]){ 
      for(char i='A';i<='Z';i++){ 
        System.out.print(i+" "); 
      } 
    } 
} 
SLIP 1(B) 
Write a ‘java’ program to copy only non-numeric data from one file to another file. 
    import java.io.*; 
    class Demo{ 
        public static void main(String a[]) throws IOException 
        { 
            char ch; 
            FileReaderfr = new FileReader("demo.txt"); 
            FileWriter fw = new FileWriter("second.txt"); 
            int c; 
            while ((c=fr.read())!=-1) 
            { 
                ch=(char)c; 
            if(Character.isDigit(ch)==false) 
            { 
                fw.write(c); 
            } 
            } 
 
            fr.close(); 
            fw.close(); 
        } 
    } 
 
SLIP 2(A) 
Write a java program to display all the vowels from a given string. 
import java.util.*; 
 
class Check { 
    public static void main(String[] a)  
    { 
        Scanner s = new Scanner(System.in); 
           System.out.println("Enter a string:"); 
        String st = s.nextLine();   
 
        System.out.println("Vowels in the string are:"); 
 
        for (int i = 0; i<st.length(); i++) { 
            char ch = st.charAt(i); 
 
            if (ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u' ||  
                ch == 'A' || ch == 'E' || ch == 'I' || ch == 'O' || ch == 'U')  
{ 
                System.out.print(ch + " "); 
            } 
        } 
    } 
} 
 
 
 
 
SLIP 2(B) 
Design a screen in Java to handle the Mouse Events such as MOUSE_MOVED and MOUSE_CLICK 
and display the position of the Mouse_Click in a TextField. 
import java.awt.event.*; 
import java.awt.*; 
import javax.swing.*; 
import java.awt.BorderLayout; 
class Demo extends MouseAdapter 
{ 
    JFrame f; 
    JTextField t; 
    Demo() 
    {   f=new JFrame(); 
        t=new JTextField(20); 
        f.add(t); 
        f.addMouseListener(this); 
        f.setLayout(new FlowLayout()); 
        f.setVisible(true); 
        f.setSize(400,400); 
        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); 
    } 
    public void mouseClicked(MouseEvent e) 
    {   t.setText("Mouse Clicked at x :"+e.getX()+" Y : "+e.getY()); 
    } 
    public void mouseEntered(MouseEvent e) 
    { 
        t.setText("Mouse entered at x :"+e.getX()+" Y : "+e.getY()); 
    } 
    public static void main(String a[]) 
    { 
        new Demo(); 
    } 
} 
 
SLIP 3(A) 
Write a ‘java’ program to check whether given number is Armstrong or not. (Use static keyword) 
import java.util.*; 
class Number  
{ 
    static int isArmstrong(int n)  
    { 
        int sum = 0; 
        while (n > 0) { 
            int r = n % 10; 
 
                int cube = r * r * r; 
            sum = sum + cube; 
            n = n / 10; 
        } 
        return sum; 
    } 
    public static void main(String[] a)  
    { 
        Scanner s = new Scanner(System.in); 
        System.out.println("Enter a number: "); 
        int n = s.nextInt(); 
        if (n==isArmstrong(n)) 
        { 
            System.out.println("It is an Armstrong number"); 
        } else  
        { 
            System.out.println("It is not an Armstrong number"); 
        } 
    } 
} 
 
SLIP 3(B) 
Define an abstract class Shape with abstract methods area () and volume (). Derive abstract class 
Shape into two classes Cone and Cylinder. Write a java Program to calculate area and volume of 
Cone and Cylinder.(Use Super Keyword.) 
import java.util.*; 
abstract class Shape 
{   int r,l; 
    Shape(int r,int l) 
    { 
        this.r=r; 
        this.l=l; 
    } 
    abstract void area(); 
    abstract void vol(); 
} 
class Cone extends Shape 
{ 
    Cone(int r,int l) 
 
    { 
        super(r,l); 
    } 
    void area() 
    { 
        System.out.println("Area of cone "+(3.14*r*(r+l))); 
    } 
    void vol() 
    {   float v=0.33f*3.14f*r*r*l; 
        System.out.println("vol of cone "+v); 
    } 
} 
class cylinder extends Shape 
{ 
    cylinder(int r,int l) 
    { 
        super(r,l); 
    } 
    void area() 
    {   float area=2*3.14f*r*l+(2*3.14f*r*r); 
        System.out.println("Area of cylinder "+area); 
    } 
    void vol() 
    { 
        float v=3.14f*r*r*l; 
        System.out.println("Vol of cylinder "+v); 
    } 
} 
class Demo 
{ 
    public static void main(String a[]) 
 
    { 
        Scanner s=new Scanner(System.in); 
        System.out.println("Enter values of length and radius for cone "); 
        int l=s.nextInt(); 
        int r=s.nextInt(); 
         
        Cone ob=new Cone(r,l); 
        ob.area(); 
        ob.vol(); 
         
        System.out.println("Enter values of height and radius for cylinder "); 
        l=s.nextInt(); 
        r=s.nextInt(); 
         
        cylinder c=new cylinder(r,l); 
        c.area(); 
        c.vol(); 
    } 
} 
 
SLIP 4(A) 
Write a java program to display alternate character from a given string 
import java.util.*; 
class AlternateCharacters { 
    public static void main(String[] args) { 
        Scanner s = new Scanner(System.in); 
        System.out.println("Enter a string:"); 
        String st = s.nextLine();  
                System.out.println("Alternate characters in the string are:"); 
        for (int i = 0; i<st.length(); i =i+ 2) { 
            System.out.print(st.charAt(i) + " ");   
 
        } 
    } 
} 
SLIP 4(B) 
Write a java program using Applet to implement a simple arithmetic calculator. 
import java.awt.*; 
import java.awt.event.*; 
import java.applet.*; 
 
public class Slip4_2  extends Applet implements ActionListener 
{ 
      String msg=" "; 
      int v1,v2,result; 
      TextField t; 
      Button b[]=new Button[10]; 
      Button add,sub,mul,div,clear,equals; 
      char choice; 
      Panel p,p1; 
      public void init() 
      { 
            setLayout(new BorderLayout()); 
             p =new Panel(); 
            t=new TextField(20); 
            p.add(t); 
            
            p1=new Panel(); 
            p1.setLayout(new GridLayout(5,4)); 
            for(int i=0;i<10 ;i++) 
            { 
                  b[i]=new Button(""+i); 
            } 
            equals=new Button("="); 
            add=new Button("+"); 
            sub=new Button("-"); 
            mul=new Button("*"); 
            div=new Button("/"); 
            clear=new Button("C"); 
 
            for(int i=0;i<10 ;i++) 
            { 
                  p1.add(b[i]); 
            } 
 
            p1.add(equals); 
            p1.add(add); 
 
            p1.add(sub); 
            p1.add(mul); 
            p1.add(div); 
            p1.add(clear); 
            
            for(int i=0;i<10 ;i++) 
            { 
                  b[i].addActionListener(this); 
            } 
            add.addActionListener(this); 
            sub.addActionListener(this); 
            mul.addActionListener(this); 
            div.addActionListener(this); 
            clear.addActionListener(this); 
            equals.addActionListener(this); 
      
            add(p,BorderLayout.NORTH); 
            add(p1); 
                  
      } 
 
      public void actionPerformed(ActionEvent ae) 
      { 
            String str = ae.getActionCommand(); 
            char ch = str.charAt(0); 
            if ( Character.isDigit(ch)) 
            t.setText(t.getText()+str); 
            else 
            if(str.equals("+")) 
            { 
                  v1=Integer.parseInt(t.getText()); 
                  choice='+'; 
                  t.setText(""); 
            } 
            else if(str.equals("-")) 
            { 
                  v1=Integer.parseInt(t.getText()); 
                  choice='-'; 
                  t.setText(""); 
            } 
            else if(str.equals("*")) 
            { 
                  v1=Integer.parseInt(t.getText()); 
                  choice='*'; 
                  t.setText(""); 
            } 
            else if(str.equals("/")) 
            { 
 
                  v1=Integer.parseInt(t.getText()); 
                  choice='/'; 
                  t.setText(""); 
            } 
            
            if(str.equals("=")) 
            { 
                  v2=Integer.parseInt(t.getText()); 
                  if(choice=='+') 
                        result=v1+v2; 
                  else if(choice=='-') 
                        result=v1-v2; 
                  else if(choice=='*') 
                        result=v1*v2; 
                  else if(choice=='/') 
                        result=v1/v2; 
                  
                  t.setText(""+result); 
            }     
            if(str.equals("C")) 
            { 
                  t.setText(""); 
            } 
      } 
} 
 
<html> 
<applet code="Slip4_2.class" height=1000 width=1000> 
</applet> 
</html> 
 
SLIP 5(A) 
Write a java program to display following pattern: 
 
class NumberPattern { 
    public static void main(String[] args) { 
                for (int i = 5; i>= 1; i--) { 
                       for (int j = i; j <= 5; j++) { 
                System.out.print(j);   
 
            } 
            System.out.println();   
        } 
    } 
} 
 
SLIP 5(B) 
Write a java program to accept list of file names through command line. Delete the files having 
extension .txt. Display name, location and size of remaining files. 
import java.io.*; 
import java.util.*; 
class ListFile 
{ 
    public static void main(String a[]) throws Exception 
    { 
        for(int i=0;i<a.length;i++) 
        { 
            String fnm=a[i]; 
            File f=new File(fnm); 
            if(f.exists()) 
            {   if(f.isFile()) 
                {   if(fnm.endsWith(".txt")) 
                    { 
                        f.delete(); 
                        System.out.println(fnm+" file is deleted "); 
                    } 
                    else 
                    {  System.out.println("file name "+fnm+" path "+f.getAbsolutePath()); 
                        System.out.print(" size "+f.length()); 
                    } 
                } 
 
                else     
                    System.out.println(fnm+" is directory"); 
            } 
            else 
                System.out.println(fnm+" is not exist "); 
        } 
    } 
} 
 
SLIP 6(A) 
Write a java program to accept a number from user, if it zero then throw user defined Exception 
“Number Is Zero”, otherwise calculate the sum of first and last digit of that number. (Use static 
keyword). 
import java.util.Scanner; 
class NumZero extends Exception  
{} 
class Cal 
{ 
    static int n; 
    public static void main(String args[])  
    { 
        int first, last = 0; 
        Scanner scanner = new Scanner(System.in);  
        try  
        { 
            System.out.print("Enter Number: "); 
            n = scanner.nextInt();   
            if (n != 0) { 
                last = n % 10;   
                first = n;   
                while (n >= 10)  
                { n = n / 10; 
 
                } 
                first = n;   
                System.out.print("Sum of First and Last Number is: " + (first + last)); 
            } else 
            { 
                throw new NumZero();  // Throw exception if the number is zero 
            } 
        }  
        catch (NumZeronz)  
        { 
            System.out.println("Number is Zero"); 
        }  
        catch (Exception e)  
        { 
            System.out.println("Invalid input. Please enter a valid integer.");  // Handle any other 
exceptions 
        }  
    } 
} 
 
 
SLIP 6(B) 
Write a java program to display transpose of a given matrix. 
class MatrixTranspose{ 
    public static void main(String args[]) 
    { 
    int i, j; 
    int array[][] = {{1,3,4},{2,4,3},{3,4,5}}; 
    System.out.println("Transpose of Matrix is :"); 
    for(i = 0; i< 3; i++) 
        { 
 
            for(j = 0; j < 3; j++) 
            { 
                System.out.print(array[j][i]+" "); 
            } 
            System.out.println(" "); 
        } 
    } 
} 
 
SLIP 7(A) 
Write a java program to display Label with text “Dr. D Y Patil College”, background color Red and 
font size 20 on the frame.  
import java.awt.*; 
class Slip7 extends Frame 
{ 
      Label l; 
      Slip7() 
      { 
            l=new Label("Dr. D Y Patil College "); 
            l.setFont(new Font("Georgia",Font.BOLD,20)); 
            l.setForeground(Color.BLUE); 
            add(l); 
            setBackground(Color.RED); 
            setSize(300,300); 
            setLayout(new FlowLayout());  
            setVisible(true); 
            
      } 
      public static void main(String a[]) 
      { 
            new Slip7(); 
      } 
} 
SLIP 7(B) 
Write a java program to accept details of ‘n’ cricket player (pid, pname, totalRuns, InningsPlayed, 
NotOuttimes). Calculate the average of all the players. Display the details of player having 
maximum average. (Use Array of Object) 
import java.util.*; 
class Cricket  
{ 
    String Name; 
 
    int Total_runs; 
    int Notout; 
    int Inning; 
    float avg; 
    Scanner sc=new Scanner(System.in); 
    void accept()  
    { 
        System.out.print("Enter Name of Player: "); 
        Name = sc.next();   
        System.out.print("Enter Total Runs of Player: "); 
        Total_runs = sc.nextInt();   
        System.out.print("Enter Times Not out: "); 
        Notout = sc.nextInt();   
        System.out.print("Enter Innings played by Player: "); 
        Inning = sc.nextInt();   
        //scanner.nextLine();   
    } 
    void average()  
    { 
        if (Inning != 0)  
            avg = (float) Total_runs / Inning;      // Calculate average 
        else  
            avg = 0;  
        System.out.println("Name: " + Name + "\nTotal Runs: " + Total_runs + 
"\nAverage: " + avg + "\nInnings: " + Inning); 
    } 
} 
 
class Player 
{ 
    public static void main(String a[])  
    { 
        float max = 0; 
        int n; 
        Scanner scanner = new Scanner(System.in);  
        System.out.print("How many Players: "); 
        n = scanner.nextInt();   
        Cricket[] ob1 = new Cricket[n];   
        for (int i = 0; i< n; i++)  
        { 
            ob1[i] = new Cricket(); 
            ob1[i].accept();   
        } 
        System.out.println("Details of players "); 
        for (int i = 0; i< n; i++)  
        { 
            ob1[i].average();   
        } 
 
        int p=0; 
        for (int i = 0; i< n; i++)  
        { 
            if (max < ob1[i].avg)  
            {   p=i; 
                max = ob1[i].avg;   
            } 
        } 
        System.out.println("-----------------------------\nDetails of player 
having maximum average  "); 
        ob1[p].average(); 
         
    } 
} 
 
SLIP 8(A) 
Define an Interface Shape with abstract method area(). Write a java program to calculate an area 
of Circle and Sphere.(use final keyword) 
import java.util.*; 
interface shape 
{   final float pi=3.14f; 
    void area(); 
} 
class circle implements shape 
{   int r; 
    circle(int r) 
    { 
        this.r=r; 
    } 
    public void area() 
    { 
        System.out.println("Area of circle "+(pi*r*r)); 
    } 
} 
 
class sphere implements shape 
{ 
 
    int r; 
    sphere(int r) 
    { 
        this.r=r; 
    } 
    public void area() 
    { 
        System.out.println("Area of sphere "+(4*pi*r*r)); 
    } 
    public static void main(String a[]) 
    { 
        Scanner s=new Scanner(System.in); 
        System.out.println("Enter radius "); 
        int r=s.nextInt(); 
        shape sp;       //reference 
        sp=new circle(r); 
        sp.area(); 
         sp=new sphere(r); 
        sp.area(); 
    } 
} 
 
SLIP 8(B) 
Write a java program to display the files having extension .txt from a given directory. 
import java.io.*; 
import java.util.*; 
class TextFile 
{ 
    public static void main(String[] a)  
    {   Scanner sc=new Scanner(System.in); 
        System.out.println("Enter Directory name "); 
        String nm=sc.nextLine(); 
        File dir = new File(nm); 
        String[] file = dir.list();  
        if(dir.isDirectory()) 
 
        { 
        if (file != null) { 
            for (int i = 0; i<file.length; i++)  
            {  
                if (file[i].endsWith(".txt"))  
                { 
                    System.out.println(file[i]);   
                } 
            } 
        } 
        } 
        else 
            System.out.println("Given directory not found "); 
    } 
} 
 
 
 
SLIP 9(A) 
 Write a java Program to display following pattern: 
 
public class PatternDisplay 
{ 
    public static void main(String[] args)  
    { 
        int rows = 4;  
        for (int i = 1; i<= rows; i++)  
        {  
            for (int j = 1; j <= i; j++)  
            { 
                if (j % 2 != 0)  
                    System.out.print("1"); 
                 else  
                    System.out.print("0"); 
            } 
 
            System.out.println();  
        } 
    } 
} 
 
SLIP 9(B) 
Write a java program to validate PAN number and Mobile Number. If it is invalid then throw user 
defined Exception “Invalid Data”, otherwise display it. 
import java.util.*; 
class InvalidData extends Exception 
{} 
class NRC 
{ 
    public static void main(String[] args) 
    { 
        Scanner s=new Scanner(System.in); 
         
        System.out.println("Enter mob no "); 
        String mob=s.next(); 
        System.out.println("Enter PAN no "); 
        String pan=s.next(); 
        try 
        { 
            if(mob.length()==10) 
            {   if(mob.charAt(0)<7) 
                    throw new InvalidData(); 
                for(int i=1;i<mob.length();i++) 
                { 
                    char ch=mob.charAt(i); 
                    if(!Character.isDigit(ch)) 
                        throw new InvalidData(); 
                }    
                System.out.println("Mob no is valid "+mob); 
            } 
            else 
                throw new InvalidData(); 
             
            if(pan.length()==10) 
            {   int i; 
                for(i=0;i<5;i++) 
                { 
                    char ch=pan.charAt(i); 
                    if(!Character.isUpperCase(ch)) 
                        throw new InvalidData(); 
 
                } 
                 
                for(i=5;i<9;i++) 
                { 
                    char ch=pan.charAt(i); 
                    if(!Character.isDigit(ch)) 
                        throw new InvalidData(); 
                } 
                char ch=pan.charAt(9); 
                if(!Character.isUpperCase(ch)) 
                    throw new InvalidData(); 
                else     
                    System.out.println("Valid pan no "+pan); 
            } 
            else 
                throw new InvalidData(); 
        } 
        catch(InvalidData ob) 
        {   System.out.println("Given data is invalid "); 
        } 
    } 
} 
SLIP 10(A) 
Write a java program to count the frequency of each character in a given string. 
import java.util.*; 
class CharacterFrequency 
{ 
    public static void main(String[] args)  
    { 
        Scanner sc = new Scanner(System.in);  
        System.out.println("Enter a string: "); 
        String str = sc.nextLine();  
        int[] frequency = new int[256]; 
        for (int i = 0; i<str.length(); i++)  
        {  
            frequency[str.charAt(i)]++;  
        } 
        System.out.println("Character frequencies:"); 
        for (char ch = 0; ch<frequency.length; ch++) { 
            if (frequency[ch] > 0)  
            {  
                System.out.println(ch + ": " + frequency[ch]); 
            } 
        } 
    } 
} 
 
 
SLIP 10(B) 
Write a java program for the following: 
 
import javax.swing.*; 
import java.awt.event.*; 
import java.awt.FlowLayout; 
 
class CompoundInterest extends JFrame implements ActionListener  
{ 
    JLabel l1, l2, l3, l4, l5, l6; 
    JTextField t1, t2, t3, t4, t5; 
    JButton b1, b2, b3; 
    public CompoundInterest() 
    { 
        setTitle("Simple Interest Calculator"); 
        setSize(400, 300); 
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); 
        setLayout(new FlowLayout()); 
 
        l1 = new JLabel("Simple Interest Calculator"); 
        l2 = new JLabel("Principal Amount:"); 
        l3 = new JLabel("Interest Rate (%):"); 
        l4 = new JLabel("Time (Years):"); 
        l5 = new JLabel("Total Amount:"); 
        l6 = new JLabel("Interest Amount:"); 
 
        t1 = new JTextField(20); 
        t2 = new JTextField(20); 
        t3 = new JTextField(20); 
        t4 = new JTextField(20); 
        t5 = new JTextField(20); 
 
        b1 = new JButton("Calculate"); 
        b2 = new JButton("Clear"); 
       // b3 = new JButton("Close"); 
 
        add(l1); 
        add(l2); 
        add(t1); 
        add(l3); 
 
        add(t2); 
        add(l4); 
        add(t3); 
        add(l5); 
        add(t4); 
        add(l6); 
        add(t5); 
        add(b1); 
        add(b2); 
 
        b1.addActionListener(this); 
        b2.addActionListener(this); 
 
        setVisible(true); 
    } 
 
    public void actionPerformed(ActionEvent e)  
    { 
          
        double a = Integer.parseInt(t1.getText()); 
        double r = Float.parseFloat(t2.getText()); 
        double t = Float.parseFloat(t3.getText()); 
        double amt=0,tamt=0; 
       
        if (e.getSource() == b1)  
        {  
           amt=(a*r*t)/100; 
           tamt=amt+a; 
            t4.setText(amt+" "); 
            t5.setText(tamt+" "); 
        } 
        else if(e.getSource()==b2) 
        { 
            t1.setText(""); 
            t2.setText(""); 
            t3.setText(""); 
            t4.setText(""); 
            t5.setText(""); 
         
         } 
    } 
 
    public static void main(String args[])  
    { 
        new CompoundInterest(); 
    } 
} 
 
SLIP 11(A) 
 
Write a menu driven java program using command line arguments for the following:  
1. Addition 2. Subtraction 3. Multiplication 4. Division. 
 
import java.util.*; 
class Operations 
{    
    public static void main(String a[])  
    {   int n1=Integer.parseInt(a[0]); 
        int n2=Integer.parseInt(a[1]); 
        Scanner sc = new Scanner(System.in); 
        int ch=0; 
        do 
        { 
            System.out.println("Enter 1: Addition"); 
            System.out.println("Enter 2: Subtraction"); 
            System.out.println("Enter 3: Multiplication"); 
            System.out.println("Enter 4: Division"); 
            System.out.println("Enter 0: Exit "); 
            System.out.print("Enter your choice: "); 
            ch = sc.nextInt();  
 
            switch (ch)  
            { 
                case 1:System.out.println("Add = "+(n1+n2)); 
                break; 
                case 2:System.out.println("Sub = "+(n1-n2)); 
                break; 
                case 3:System.out.println("Mult = "+(n1*n2)); 
                break; 
                case 4:System.out.println("Div = "+(n1/n2)); 
                break; 
 
                default:System.out.println("Invalid choice"); 
                break; 
            } 
        }while(ch!=0); 
    } 
} 
 
 
SLIP 12(A) 
Write a java program to display each String in reverse order from a String array. 
import java.util.*; 
 
class ReverseString 
{ 
 
    public static void main(String args[]) 
    {       Scanner sc=new Scanner(System.in); 
            System.out.println("Enter no of strings "); 
            int n=sc.nextInt(); 
            String arr[] = new String[n]; 
            for(int i=0;i<n;i++) 
            { 
                System.out.println("Enter string "); 
                arr[i]=sc.next(); 
            } 
            System.out.println("Reverse each string in array "); 
            for(int j=0; j<n; j++) 
            {   String str=arr[j]; 
                for(int i=str.length()-1;i>=0;i--) 
                {   System.out.print(str.charAt(i)); 
                } 
                System.out.print("   "); 
            } 
    } 
} 
 
SLIP 12(B) 
Write a java program to display multiplication table of a given number into the List box by clicking 
on button. 
import java.applet.*; 
import java.awt.*; 
import java.awt.event.*; 
public class Slip12B extends Applet implements ActionListener 
{ 
    Button b1 = new Button("Show"); 
    List Multi = new List(); 
    String str =""; 
    public void init() 
    { 
        Multi.add("1"); 
        Multi.add("2"); 
        Multi.add("3"); 
        Multi.add("4"); 
        Multi.add("5"); 
 
        Multi.add("6"); 
        Multi.add("7"); 
        Multi.add("8"); 
        Multi.add("9"); 
        Multi.add("10"); 
        add(Multi); 
        add(b1); 
       b1.addActionListener(this); 
    } 
    public void paint(Graphics g) 
    { 
        int count = 100;  
        int num = Integer.parseInt(Multi.getSelectedItem()); 
        for(int i=1;i<=10;i++){ 
            int a = num*i; 
           g.drawString(i  +" * " + i +" = "+ a,100,count); 
            count = count+20; 
           } 
    } 
    public void actionPerformed(ActionEvent e) 
    { 
        repaint(); 
    } 
} 
/* 
<applet code="Slip12B.class" width="300" height="300"> 
</applet> 
*/ 
 
SLIP 13(A) 
 
Write a java program to accept ‘n’ integers from the user & store them in an ArrayList collection. 
Display the elements of ArrayList collection in reverse order. 
import java.util.Scanner; 
class ReverseArray 
{ 
    public static void main(String args[])  
    { 
        Scanner scanner = new Scanner(System.in);  
        int n; 
        System.out.print("Enter how many elements you want: "); 
        n = scanner.nextInt();  
        scanner.nextLine();  
        String[] name = new String[n];  
        for (int i = 0; i< n; i++)  
        { 
            System.out.print("Enter " + (i + 1) + " string: "); 
            name[i] = scanner.nextLine();  
        } 
        System.out.print("After sorting in reverse order: "); 
        for (int i = n - 1; i>= 0; i--)  
        { 
            System.out.print(name[i] + " ");  
        } 
    } 
} 
SLIP 13(B) 
Write a java program that asks the user name, and then greets the user by name. Before 
outputting the user's name, convert it to upper case letters. For example, if the user's name is Raj, 
then the program should respond "Hello, RAJ, nice to meet you!". 
import java.util.Scanner; 
class Greet { 
    public static void main(String args[])  
 
    { 
        Scanner scanner = new Scanner(System.in);  
        System.out.print("Enter Username: "); 
        String str = scanner.nextLine();  
        System.out.print("\"Hello, " + str.toUpperCase() + ", nice to meet you!\""); 
    } 
} 
SLIP 14(A) 
Write a Java program to calculate power of a number using recursion. 
import java.util.*; 
class PowerNum 
{   int power(int base, int exp)  
    {   //static int p=1;    
        if(exp!=0) 
        {    
            return (base*power(base,exp-1)); 
        } 
        else return 1; 
    } 
    public static void main(String args[]) 
    { 
        int base,exp; 
        Scanner sc =new Scanner(System.in); 
        System.out.print("Enter the Base Number : "); 
        base = sc.nextInt(); 
        System.out.print("Enter the Exponent Number : "); 
        exp = sc.nextInt(); 
        PowerNum ob=new PowerNum(); 
        int result = ob.power(base, exp); 
        System.out.print("powwer : "+ result); 
    } 
     
} 
SLIP 14(B) 
Write a java program to accept the details of employee (Eno, EName, Sal) and display it on next 
frame using appropriate event. 
import javax.swing.*; 
import java.awt.*; 
import java.awt.event.*; 
class Emp_details extends JFrame implements ActionListener  
{ 
    JLabel empno, empname, sal; 
 
    JTextField tempno, tempname, tsal; 
    JButton b; 
   Emp_details()  
    { 
        //f = new Frame("\t Employee Details:"); 
        empno = new JLabel("\t Employee Id:"); 
        empname = new JLabel("\t Employee Name:"); 
        sal = new JLabel("\t Employee Sal:"); 
        tempno = new JTextField(20); 
        tempname = new JTextField(20); 
        tsal = new JTextField(20); 
        b = new JButton("Next"); 
        add(empno); 
        add(tempno); 
        add(empname); 
        add(tempname); 
        add(sal); 
        add(tsal); 
        add(b); 
        b.addActionListener(this); 
        setLayout(new FlowLayout()); 
        setSize(400, 400); 
        setVisible(true); 
    } 
    public void actionPerformed(ActionEvent ae)  
    { 
        String empno, empname, sal; 
        empno = tempno.getText(); 
        empname = tempname.getText(); 
        sal = tsal.getText(); 
        setVisible(false); 
        new FrameDetails(empno, empname, sal); 
    } 
} 
class FrameDetails extends JFrame  
{ 
   /// JFrame f; 
    JLabel empno, empname, sal,l; 
    JTextField tempno, tempname, tsal; 
    FrameDetails(String no, String name, String s)  
{ 
        //f = new Frame("Employee Details:"); 
        l=new JLabel("\tYour Entered Information is "); 
        empno = new JLabel("Employee ID:"); 
        empname = new JLabel("Employee Name:"); 
        sal = new JLabel("Employee Salary:"); 
        tempno = new JTextField(20); 
        tempname = new JTextField(20); 
 
        tsal = new JTextField(20); 
        add(l); 
        add(empno); 
        add(tempno); 
        add(empname); 
        add(tempname); 
        add(sal); 
        add(tsal); 
        tempno.setText(no); 
        tempname.setText(name); 
       tsal.setText(s); 
       setLayout(new FlowLayout()); 
       setSize(400, 400); 
       setVisible(true); 
    } 
} 
class Slip14_2 
{ 
    public static void main(String a[]) { 
        new Emp_details(); 
    } 
} 
 
SLIP 15(A) 
Write a java program to search given name into the array, if it is found then display its index 
otherwise display appropriate message. 
import java.util.*; 
class FindName 
{ 
    public static void main(String args[])  
    { 
        Scanner sc=new Scanner(System.in); 
        System.out.println("Enter no of strings "); 
        int n=sc.nextInt(); 
        String arr[] = new String[n]; 
        for(int i=0;i<n;i++) 
        { 
            System.out.println("Enter string "); 
            arr[i]=sc.next(); 
        } 
        int cnt=0;  
         
        System.out.print("Enter String to search "); 
        String input = sc.next();  
        for (int i = 0; i<n; i++)  
        { 
            if (arr[i].equals(input))  
 
            { 
                System.out.println(input+" string found at "+i+" position ");  
                cnt++;  
                break; 
            } 
        } 
        if (cnt==0)  
        { 
            System.out.println("String Not Found");  
        } 
    } 
} 
 
SLIP 15(B) 
Write an applet application to display smiley face. 
import java.applet.Applet;  
import java.awt.*;  
      
public class Slip15 extends Applet 
{  
  public void paint(Graphics g) 
  {  
      g.drawOval(50,15,200,200); 
      g.fillOval(80,90,30,15); 
      g.fillOval(190,90,30,15); 
      g.drawOval(17,90,30,50); 
      g.drawOval(250,90,30,50); 
      g.drawLine(150,110,150,150); 
      g.drawArc(100,160,100,30,170,200); 
  }   
} 
 
<html> 
<applet code="Slip15.class" height=1000 width=1300> 
</applet> 
</html> 
 
SLIP 16(A) 
Write a java program to calculate sum of digits of a given number using recursion. 
import java.util.*; 
class Recursion  
{ 
    int sum =0; 
    public static void main(String args[]) throws Exception 
    { 
        int n; 
        Scanner s = new Scanner(System.in); 
        System.out.print("Enter the Number : "); 
 
        n =s.nextInt(); 
        Recursion obj = new  Recursion(); 
        int a = obj.sum_digit(n); 
        System.out.println("Sum of Digit is : "+a); 
    } 
    int sum_digit(int n) 
    { 
        sum = n%10; 
        if(n==0) 
            return 0; 
        else 
         
            return sum +sum_digit(n/10); 
    }  
} 
SLIP 16(B) 
Write a java program to accept n employee names from user. Sort them in ascending order and 
Display them.(Use array of object and Static keyword). 
import java.util.*; 
class Employee  
{ 
    public static void main(String[] args)  
    { 
        Scanner sc = new Scanner(System.in); 
        System.out.print("Enter the number of employees "); 
        int n = sc.nextInt(); 
        String str[]=new String[n]; 
        for (int i = 0; i< n; i++)  
        { 
            System.out.print("Enter name of employee  "); 
            str[i] = sc.next(); 
             
        } 
 
        for (int i = 0; i<n; i++)  
        { 
            for (int j = 0; j <n-i-1; j++)  
            { 
                if (str[j].compareTo(str[j + 1]) > 0)  
                { 
                    String temp = str[j]; 
                    str[j] = str[j + 1]; 
                    str[j + 1] = temp; 
                } 
            } 
        } 
        System.out.println("After sorting names are "); 
 
        for(int i=0;i<n;i++) 
        { 
            System.out.println(str[i]); 
        } 
        
    } 
} 
 
SLIP 17(A) 
Write a java Program to accept ‘n’ no’s through command line and store only armstrong no’s into 
the array and display that array. 
class armstrong 
{ 
    public static void main(String a[]) 
    {   int arr[]=new int[a.length]; 
        int k=0; 
        for(int i=0;i<a.length;i++) 
        { 
            int n=Integer.parseInt(a[i]); 
            int sum=0; 
            int temp=n; 
            while (n>0)  
            { 
                int r=n%10; 
                sum=sum+(r*r*r); 
                n=n/10; 
            } 
            if(sum==temp) 
            {   arr[k]=sum; 
                k++; 
            } 
        } 
        System.out.println("Amstrong no array is "); 
        for(int i=0;i<k;i++) 
        { 
            System.out.println(arr[i]); 
        } 
    } 
} 
 
 
SLIP 17(B) 
Define a class Product (pid, pname, price, qty). Write a function to accept the product details, 
display it and calculate total amount. (use array of Objects) 
import java.util.Scanner; 
 
class Product  
{ 
    String pname; 
    int pid, qty; 
    float price, total; 
    void accept()  
    { 
        Scanner sc = new Scanner(System.in); 
        System.out.println("Enter the product Name: "); 
        pname = sc.nextLine(); 
        System.out.println("Enter pid, qty, and price: "); 
        pid = sc.nextInt(); 
        qty = sc.nextInt(); 
        price = sc.nextFloat(); 
    } 
    void display()  
    { 
        total = qty * price; 
        System.out.println("pid: " + pid +  
                           "\nProduct Name: " + pname +  
                           "\nQuantity: " + qty +  
                           "\nPrice: " + price +  
                           "\nTotal Amount: " + total); 
    } 
} 
class Details  
{ 
    public static void main(String args[])  
    { 
        int n; 
        float totalAmount = 0; 
 
        Scanner sc = new Scanner(System.in); 
        System.out.print("Enter the number of products: "); 
        n = sc.nextInt(); 
        Product[] products = new Product[n]; 
        for (int i = 0; i< n; i++) { 
            System.out.println("Enter details for product " + (i + 1) + ":"); 
            products[i] = new Product(); 
            products[i].accept(); 
        } 
        System.out.println("\nProduct Details:"); 
        for (Product product : products)  
        { 
            product.display(); 
            totalAmount += product.total;  
        } 
        System.out.println("\nTotal Amount for all products: " + totalAmount); 
    } 
} 
SLIP 18(A) 
Write a Java program to calculate area of Circle, Triangle &Rectangle.(Use Method Overloading) 
import java.util.*; 
class AreaCalculate 
{ 
    void area(int r) 
    { 
        System.out.println("Area of Cirlce = " + (3.14*r*r)); 
    } 
     float area(int b, float h) 
    {        return b*h/2; 
    } 
    double area(Float l, Float db) 
 
    { 
        return l+db; 
    } 
} 
 
class Cal 
{ 
    public static void main(String args[]) 
    { 
        int r, b, l, db; 
        float h; 
        Scanner br = new Scanner(System.in); 
        System.out.println("Enter the radius, base, height, length and breadth : "); 
        r = br.nextInt(); 
        b = br.nextInt(); 
        h = br.nextFloat(); 
        l = br.nextInt(); 
        db = br.nextInt(); 
        AreaCalculate ac = new AreaCalculate(); 
        ac.area(r); 
        System.out.println("Area of Triangle = " +ac.area(b,h)); 
       System.out.println("Area of Rectange = " +ac.area(l,db)); 
    } 
} 
 
 
SLIP 18(B) 
Write a java program to copy the data from one file into another file, while copying change the 
case of characters in target file and replaces all digits by ‘*’ symbol. 
import java.util.*; 
import java.io.*; 
 
class CopyFile 
{ 
    public static void main(String a[]) throws Exception 
    { 
        Scanner sc=new Scanner(System.in); 
        System.out.println("Enter 1st file name "); 
        String f1=sc.next(); 
        System.out.println("Enter 2nd file name "); 
        String f2=sc.next(); 
        FileInputStreamfis=new FileInputStream(f1); 
        FileOutputStream fos=new FileOutputStream(f2); 
        int ch; 
        while((ch=fis.read())!=-1) 
        { 
            if(Character.isLowerCase(ch)) 
            {  ch=Character.toUpperCase(ch); 
                fos.write(ch); 
            } 
            else if(Character.isUpperCase(ch)) 
            {  ch=Character.toLowerCase(ch); 
                fos.write(ch); 
            } 
            else if(Character.isDigit(ch)) 
                fos.write('*'); 
            else 
                fos.write(ch); 
        } 
        System.out.println("File copy "); 
        fos.close(); 
        fis.close(); 
    } 
 
} 
 
SLIP 19(A) 
Write a Java program to display Fibonacci series using function. 
import java.util.Scanner; 
class FiboSeries 
{ 
    static void fibo()  
    { 
        int i, a, b, c, n; 
        Scanner sc = new Scanner(System.in);  
        System.out.print("Enter Number: "); 
        n = sc.nextInt();  
        a = b = 1; 
        System.out.print("The Fibonacci sequence: " + a + " " + b); 
        for (i = 1; i<= n - 2; i++)  
        { 
            c = a + b; 
            System.out.print(" " + c); 
            a = b; 
            b = c;  
        } 
    } 
    public static void main(String args[])  
    { 
        fibo();  
    } 
} 
SLIP 19(B) 
Create an Applet that displays the x and y position of the cursor movement using Mouse and 
Keyboard. (Use appropriate listener). 
 
import java.awt.event.*; 
import java.awt.*; 
import javax.swing.*; 
import java.awt.BorderLayout; 
import java.applet.*; 
 
public class Slip19 extends MouseAdapter 
{ 
    Applet f; 
    TextField t; 
    public void init() 
    {   f=new Applet(); 
        t=new TextField(20); 
        f.add(t); 
        f.addMouseListener(this); 
         
    } 
    public void mouseClicked(MouseEvent e) 
    {   t.setText("Mouse Clicked at x :"+e.getX()+" Y : "+e.getY()); 
    } 
    public void mouseEntered(MouseEvent e) 
    { 
        t.setText("Mouse entered at x :"+e.getX()+" Y : "+e.getY()); 
    } 
} 
 
Applet File Slip19.html 
<html> 
<applet code="Slip19.class" height=1000 width=1300> 
</applet> 
</html> 
 
SLIP 20(A) 
Write a java program using AWT to create a Frame with title “TYBBACA”, background color RED. If 
user clicks on close button then frame should close. 
import javax.swing.*; 
import java.awt.*; 
class TYBBACA  
{ 
    public static void main(String args[]) { 
        JFrame frame = new JFrame("TYBBACA"); 
        frame.setSize(400, 400); 
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); 
        frame.setBackground(Color.RED);  
 
        frame.setVisible(true); 
    } 
} 
SLIP 20(B) 
Construct a Linked List containing name: CPP, Java, Python and PHP. Then extend your java 
program to do the following:  
i. Display the contents of the List using an Iterator  
ii. Display the contents of the List in reverse order using a ListIterator 
 
import java.util.*; 
class Slip20_2 
{ 
    public static void main(String a[]) 
    { 
        LinkedList l=new LinkedList(); 
        l.add("CPP"); 
        l.add("Java"); 
        l.add("Python"); 
        l.add("PHP"); 
        Iterator it=l.iterator(); 
        System.out.println("Content of Linkedlist using Iterator "); 
        while (it.hasNext())  
        { 
            System.out.println(it.next());     
        } 
 
        ListIterator li=l.listIterator(); 
        System.out.println("Linkedlist in reverse order "); 
        while(li.hasNext()) 
        {   li.next();} 
        while(li.hasPrevious()) 
        { 
            System.out.println(li.previous()); 
        } 
    } 
} 
 
SLIP 21(A) 
Write a java program to display each word from a file in reverse order. 
import java.io.*; 
import java.util.*; 
class ReverseFile 
 
{ 
    public static void main(String a[]) throws Exception 
    { 
        Scanner sc=new Scanner(System.in); 
        System.out.println("Enter file name "); 
        String f=sc.next(); 
        File fr=new File(f); 
        if(fr.isFile()) 
        { 
            BufferedInputStream bis=new BufferedInputStream(new FileInputStream(f)); 
            int s=bis.available();  //size of file 
            for(int i=s-1;i>=0;i--) 
            { 
                bis.mark(i); 
                bis.skip(i); 
                System.out.print((char)bis.read()); 
                bis.reset(); 
            } 
            bis.close(); 
        } 
        else 
            System.out.println("File not found "); 
    } 
} 
 
SLIP 21(B) 
Create a hashtable containing city name & STD code. Display the details of the hashtable. Also 
search for a specific city and display STD code of that city. 
import java.util.*; 
class Slip21_2 
{ 
 
 public static void main(String a[]) 
 { 
  Scanner sc=new Scanner(System.in); 
  Hashtable hs=new Hashtable(); 
  System.out.println("Enter no of cities "); 
  int n=sc.nextInt(); 
  for(int i=0;i<n;i++) 
  { System.out.println("Enter city name "); 
   String nm=sc.next(); 
   System.out.println("Enter city code "); 
   int code=sc.nextInt(); 
   hs.put(nm,code); 
  } 
  System.out.println("hast table "+hs); 
  System.out.println("Engter city name to be search "); 
  String cnm=sc.next(); 
   
  if(hs.containsKey(cnm)) 
  { 
   System.out.println("City code "+hs.get(cnm)); 
  } 
  else 
   System.out.println("City not found "); 
 } 
} 
SLIP 22(A) 
Write a Java program to calculate factorial of a number using recursion. 
import java.util.Scanner; 
class FactorialCalculator 
{ 
    public static long factorial(int n)  
    { 
        if (n == 0 || n == 1)  
 
            return 1; 
         else  
            return n * factorial(n - 1);  
    } 
    public static void main(String[] args)  
    { 
        Scanner sc = new Scanner(System.in); 
        System.out.print("Enter a number to calculate its factorial: "); 
        int number = sc.nextInt(); 
        if (number < 0)  
         
            System.out.println("Factorial is not defined for negative 
numbers.");  
        else  
        { 
            long result = factorial(number); 
            System.out.println("The factorial of " + number + " is: " + 
result); 
        } 
    } 
} 
 
SLIP 22(B) 
Write a java program for the following:  
1. To create a file.  
2. To rename a file.  
3. To delete a file.  
4. To display path of a file. 
import java.util.*; 
import java.io.*; 
class FindName 
{ 
    public static void main(String args[]) throws Exception 
    {   Scanner sc=new Scanner(System.in); 
        int ch=0; 
        do 
        { 
             
            System.out.println("Enter File name "); 
            String fnm=sc.next(); 
            System.out.println("1.create a File \n2.Rename a file \n3.Delete a 
File \n4.Display Path of file "); 
            System.out.println("Enter choice "); 
            ch=sc.nextInt(); 
            File f=new File(fnm); 
 
            switch (ch) 
             {  
                case 1:if(f.createNewFile()) 
                            System.out.println("File New created Successfully 
"); 
                        else 
                            System.out.println("File exists 
");                    
                        break; 
                case 2: if(f.isFile()) 
                        {    
                            System.out.println("Enter new name for file ");; 
                            String nm=sc.next(); 
                            File f1=new File(nm); 
                            f.renameTo(f1); 
                            System.out.println("Rename file Successfully "); 
                        } 
                        else 
                            System.out.println("File not found "); 
                        break; 
                case 3 :if(f.delete()) 
                            System.out.println("File deleted "); 
                        else 
                            System.out.println("File not deleted "); 
                        break; 
                case 4:if(f.exists()) 
                            System.out.println("File path 
"+f.getAbsolutePath()); 
                        else 
                            System.out.println("File not found "); 
                        break; 
                case 0:break; 
                default:System.out.println("invalid choice "); 
            }  
        }while(ch!=0); 
    } 
} 
 
SLIP 23(A) 
Write a java program to check whether given file is hidden or not. If not then display its path, 
otherwise display appropriate message. 
import java.io.*; 
import java.util.*; 
class HiddenFile 
{ 
    public static void main(String a[]) 
    { 
 
        Scanner s=new Scanner(System.in); 
        System.out.println("Enter File name: "); 
        String fnm=s.next(); 
        File f=new File(fnm); 
        if(f.isHidden()) 
            System.out.println("File is Hidden."); 
        else  
            System.out.println("File Path:"+f.getAbsolutePath()); 
    } 
} 
 
SLIP 23(B) 
Write a java program to design following Frame using Swing 
 
import java.awt.event.*; 
import java.awt.*; 
import javax.swing.*; 
 
class MenuBarD extends JFrame 
{ 
    JMenuBar mb; 
    JMenu m1,m2,m3; 
    JMenuItem it1,it2,it3,it4,it5; 
    MenuBarD() 
    { 
        mb=new JMenuBar(); 
         
        m1=new JMenu("File"); 
        m2=new JMenu("Edit "); 
        m3=new JMenu("Search "); 
         
        it1=new JMenuItem("Undo"); 
        it2=new JMenuItem("Redo"); 
        it3=new JMenuItem("Cut"); 
        it4=new JMenuItem("Paste"); 
        it5=new JMenuItem("Copy"); 
         
         
        m2.add(it1); 
        m2.add(it2); 
        m2.addSeparator(); 
        m2.add(it3); 
        m2.add(it4); 
        m2.add(it5); 
         
        mb.add(m1); 
 
        mb.add(m2); 
        mb.add(m3); 
        add(mb); 
         
        setLayout(new FlowLayout(FlowLayout.LEFT)); 
        setVisible(true); 
        setSize(400,400); 
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); 
    } 
    public static void main(String a[]) 
    { 
        new MenuBarD(); 
    } 
} 
 
SLIP 24(A) 
Write a java program to count number of digits, spaces and characters from a file. 
import java.io.File; 
import java.io.FileReader; 
import java.io.IOException; 
public class FileCharacterCounter 
{ 
    public static void main(String[] args) throws IOException { 
        File file = new File("input.txt");  
        int digitCount = 0; 
        int spaceCount = 0; 
        int charCount = 0; 
        FileReaderfr = new FileReader(file); 
        int c; 
        while ((c = fr.read()) != -1)  
        { 
            char ch = (char) c; 
 
            if (Character.isDigit(ch))  
            { 
                digitCount++; 
            } 
 
            else if (Character.isWhitespace(ch))  
            { 
                spaceCount++; 
            } 
            else  
            { 
                charCount++; 
            } 
        } 
        System.out.println("Number of digits: " + digitCount); 
        System.out.println("Number of spaces: " + spaceCount); 
        System.out.println("Number of characters: " + charCount); 
        fr.close(); 
    } 
} 
SLIP 24(B) 
Create a package TYBBACA with two classes as class Student (Rno, SName, Per) with a method 
disp() to display details of N Students and class Teacher (TID, TName, Subject) with a method disp() 
to display the details of teacher who is teaching Java subject. (Make use of finalize() method and 
array of Object) 
Student.java file 
package TYBBACA; 
 
import java.util.Scanner; 
 
public class Student{ 
    int rno; 
    String name; 
    float per; 
    Scanner sc=new Scanner(System.in); 
    public void accept() 
    { 
        System.out.println("Enter rno "); 
        rno=sc.nextInt(); 
        System.out.println("Ener name "); 
        name=sc.next(); 
        System.out.println("Ener percentage "); 
        per=sc.nextFloat(); 
    } 
    public void display() 
    { 
 
        System.out.println("Rno "+rno+" name "+name+" percentage "+per); 
    } 
}  
 
 
Teacher.java File 
package TYBBACA; 
import java.util.*; 
 
public class Teacher 
{ 
    int id; 
    String name,subject; 
     
    Scanner sc=new Scanner(System.in); 
     
    public void accept() 
    { 
        System.out.println("Enter id "); 
        id=sc.nextInt(); 
        System.out.println("Enter name"); 
        name=sc.next(); 
        System.out.println("Enter subject"); 
        subject=sc.next(); 
    } 
    public void display() 
    {   if(subject.equals("Java")) 
            System.out.println("Id "+id+" Name "+name+" Subject "+subject);  
    } 
     
     
} 
 
Slip24_2.java File 
import java.util.*; 
 
import TYBBACA.Student; 
import TYBBACA.Teacher; 
class Slip24_2 
{   public static void main(String a[]) 
    { 
        Scanner sc=new Scanner(System.in); 
        System.out.println("Enter how many Students "); 
         
        int n=sc.nextInt(); 
         
        Student s[]=new Student[n]; 
        for(int i=0;i<n;i++) 
        { 
            s[i]=new Student(); 
            s[i].accept(); 
        } 
 
        System.out.println("Details of students "); 
        for(int i=0;i<n;i++) 
        {   s[i].display(); 
        } 
        System.out.println("Enter how many Teachers "); 
         
        n=sc.nextInt(); 
         
        Teacher t[]=new Teacher[n]; 
        for(int i=0;i<n;i++) 
        { 
            t[i]=new Teacher(); 
            t[i].accept(); 
        } 
        System.out.println("Details of Teachers who teach Java Subject "); 
        for(int i=0;i<n;i++) 
        {   t[i].display(); 
        } 
    } 
 
} 
 
SLIP 25(A) 
Write a java program to check whether given string is palindrome or not. 
import java.util.*; 
class Palindrome 
{ 
    public static void main(String[] args)  
    { 
        Scanner sc = new Scanner(System.in); 
        System.out.print("Enter a string: "); 
        String str = sc.nextLine(); 
        str = str.toLowerCase(); 
        String rev = ""; 
        for (int i = str.length() - 1; i>= 0; i--)  
        { 
            rev = rev+str.charAt(i); 
        } 
        if (str.equals(rev))  
        { 
            System.out.println(str + " is a palindrome."); 
        }  
        else  
        { 
            System.out.println(str + " is not a palindrome."); 
        } 
    } 
} 
 
SLIP 25(B) 
Create a package named Series having three different classes to print series:  
i. Fibonacci series  
 
ii. Cube of numbers 
iii. Square of numbers  
Write a java program to generate ‘n’ terms of the above series 
import Series.Fibo; 
import Series.square; 
import Series.cube; 
import java.util.*; 
 
class Number 
{ 
    public static void main(String a[]) 
    { 
        Scanner sc=new Scanner(System.in); 
        System.out.println("Enter no "); 
        int n=sc.nextInt(); 
        Fibo f=new Fibo(n); 
        cube c=new cube(n); 
        square s=new square(n); 
    } 
} 
 
//square.java 
package Series; 
 
public class square 
{ 
    public square(int n) 
    {  System.out.print("square of series "); 
        for(int i=1;i<=n;i++) 
        { 
            int ans=i*i; 
            System.out.print(ans+"  "); 
        } 
    } 
} 
 
//cube.java 
package Series; 
 
public class cube 
{ 
    public cube(int n) 
    {  System.out.print("Cube of series "); 
        for(int i=1;i<=n;i++) 
        { 
            int ans=i*i*i; 
            System.out.print(ans+"  "); 
        } 
 
        System.out.println(); 
    } 
} 
 
//Fibo.java 
package Series; 
 
public class Fibo 
{ 
    public Fibo(int n) 
    { 
        int f=0; 
        int s=1; 
        System.out.print("Fibo series "); 
        System.out.print(f+"  "+s+"  "); 
        for(int i=3;i<=n;i++) 
        { 
            int ans=f+s; 
            System.out.print(ans+"  "); 
            f=s; 
            s=ans; 
        } 
        System.out.println(); 
     
    } 
} 
SLIP 26(A) 
Write a java program to display ASCII values of the characters from a file. 
import java.io.*; 
import java.io.*; 
import java.util.*; 
class FileASCII  
{ 
    public static void main(String a[]) throws Exception 
    {   Scanner sc=new Scanner(System.in); 
        System.out.println("Enter file name ") 
        String fnm=sc.next(); 
 
        FileReaderfr = new FileReader(fnm); 
        int ch; 
        System.out.println("Character : ASCII Value"); 
        while ((ch = fr.read()) != -1)  
        { 
            System.out.println((char) ch + " : " + ch); 
        } 
        fr.close(); 
    } 
} 
 
 
SLIP 26(B) 
Write a java program using applet to draw Temple. 
import java.applet.*; 
import java.awt.*; 
      
public class Temple extends Applet 
{ 
      public void paint(Graphics g) 
      { 
            g.drawRect(100,150,90,120); 
            g.drawRect(130,230,20,40); 
            g.drawLine(150,100,100,150); 
            g.drawLine(150,100,190,150); 
            g.drawLine(150,50,150,100); 
            g.drawRect(150,50,20,20); 
 
      } 
} 
 
Temple.html file 
<html> 
<Applet code="Temple.class" width=600 height=600> 
</Applet> 
</html> 
 
 
 
SLIP 27(A) 
Write a java program to accept a number from user, If it is greater than 1000 then throw user 
defined exception “Number is out of Range” otherwise display the factors of that number. (Use 
static keyword) 
import java.util.*; 
class InvalidNumber extends Exception 
{ 
 
} 
 
class Number 
{ 
    int n; 
    Number(int n) 
 
    { 
        this.n=n; 
    } 
    void check() 
    {   try 
        { 
            if(n>1000) 
                throw new InvalidNumber(); 
            else 
            { 
                for(int i=1;i<=n/2;i++) 
                { 
                    if(n%i==0) 
                        System.out.println(i); 
                } 
                System.out.println(n); 
            } 
        } 
        catch(InvalidNumber  ob) 
        { 
            System.out.println("Number out of Range "); 
        } 
    } 
    public static void main(String ap[]) 
    { 
        Scanner sc=new Scanner(System.in); 
        System.out.println("Enter no "); 
        int num=sc.nextInt(); 
        Number ob=new Number(num); 
        ob.check(); 
    } 
 
} 
SLIP 28(A) 
Write a java program to count the number of integers from a given list. (Use Command line 
arguments). 
class CountIntegers 
{ 
    public static void main(String a[])  
    { 
        int cnt = 0; 
        for (for i=0;i<a.length;i++)  
        { 
                Integer.parseInt(a[i]); 
                cnt++; 
        }  
        } 
        System.out.println("Number of integers: " + cnt); 
} 
 
SLIP 29(A) 
Write a java program to check whether given candidate is eligible for voting or not. Handle user 
defined as well as system defined Exception. 
import java.util.*; 
class Invalidage extends Exception 
{} 
 
class Person 
{ 
    public static void main(String a[]) 
    { 
        Scanner sc=new Scanner(System.in); 
        System.out.println("Enter age "); 
        int age=sc.nextInt(); 
        try 
        {   if(age<18) 
                throw new Invalidage(); 
            else 
                System.out.println("eligible for voting "); 
        } 
 
        catch(Invalidageob) 
        {  System.out.println("Not eligible for voting "); 
        } 
    } 
} 
SLIP 29(B) 
Write a java program using Applet for bouncing ball. Ball should change its color for each bounce. 
 
SLIP 30(A) 
Write a java program to accept a number from a user, if it is zero then throw user defined 
Exception “Number is Zero”. If it is non-numeric then generate an error “Number is Invalid” 
otherwise check whether it is palindrome or not. 
import java.util.*; 
class ZeroNumber extends Exception{} 
 
public class PalindromeCheck 
{ 
    Scanner s=new Scanner(System.in); 
    n=s.nextInt(); 
    temp=n; 
    try{ 
        if(n<1) 
        throw new ZeroNumber(); 
        else 
        { 
            r=0;  
            while(n!=0) 
            { 
                int d=n%10; 
                r=r*10+d; 
                n=n/10; 
            } 
 
            if(temp==r) 
            System.out.println("Number is Palindrome"); 
            else  
            System.out.println("Number is not Palindrome"); 
        } 
    }catch(Exception e) 
    { 
        System.out.println("Number is Invalid"); 
    } 
} 

SLIP 30(B) 
Write a java program to design a following GUI (Use Swing). 
 
 
import java.awt.*; 
import javax.swing.*; 
 
class Slip30_2 extends JFrame 
{ 
      JLabel l1,l2,l3,l4,l5,l6; 
      JTextField t1,t2,t3; 
      JTextArea t; 
      JPanel p,p1,p2,p3; 
      ButtonGroup bg; 
      JRadioButton m,f; 
      JCheckBox c1,c2,c3; 
      JButton b1,b2; 
      Slip30_2() 
      { 
            p =new JPanel(); 
            p1=new JPanel(); 
            l1=new JLabel("First Name "); 
            l2=new JLabel("last Name "); 
            l3=new JLabel("Address "); 
            l4=new JLabel("mobile No ");  
 
            t1=new JTextField(10); 
            t2=new JTextField(10); 
 
            t3=new JTextField(10); 
            t=new JTextArea(2,10); 
            p.add(l1);  p.add(t1); 
            p.add(l2);  p.add(t2); 
            p.add(l3);  p.add(t); 
            p.add(l4);  p.add(t3); 
            p.setLayout(new GridLayout(4,2)); 
            add(p); 
            
            l5=new JLabel("Gender "); 
            m = new JRadioButton("male"); 
            f = new JRadioButton("female"); 
            
            bg = new ButtonGroup(); 
            bg.add(m);  
            bg.add(f); 
            p1.add(l5); 
            p1.add(m); 
            p1.add(f); 
            p1.setLayout(new GridLayout(1,3)); 
            
            p2=new JPanel(); 
            l6=new JLabel("Your Interests  "); 
            c1=new JCheckBox("Computer"); 
            c2=new JCheckBox("Sports"); 
            c3=new JCheckBox("Music"); 
            
            p2.add(l6); 
            p2.add(c1); 
            p2.add(c2); 
            p2.add(c3); 
            p2.setLayout(new GridLayout(1,4)); 
            
            p3=new JPanel(); 
            b1=new JButton("submit"); 
            b2=new JButton("clear"); 
            p3.add(b1); 
            p3.add(b2); 
            
            add(p); 
            add(p1); 
            add(p2); 
            add(p3); 
            setSize(500,500); 
            setLayout(new FlowLayout(FlowLayout.LEFT));     
            setVisible(true); 
            setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); 
      } 
      public static void main(String a[]) 
      { 
            new Slip30_2(); 
      } 
} 
 
 